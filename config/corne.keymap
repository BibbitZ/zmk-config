/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJ     3
#define NAV     4
#define NUM     5

// Desktop and tab navigation shortcuts
#define D_LT   LC(LG(LEFT))
#define D_RT   LC(LG(RIGHT))
#define TAB_RT LC(TAB)
#define TAB_LT LC(LS(TAB))
#define TAB_CL LC(&kp W)

// Key position groups
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
define THUMBS 36 37 38 39 40 41

/ {     
        conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    
        behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
        
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TILDE>, <&kp GRAVE>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB   |  Q  |  W  |  E  |  R  |  T  ||  Y  |  U   |  I  |  O  |  P  | BKSP |
// |NAV/ESC |  A  |  S  |  D  |  F  |  G  ||  H  |  J   |  K  |  L  |  ;  |  '   |
// |SHFT/CAP|  Z  |  X  |  C  |  V  |  B  ||  N  |  M   |  ,  |  .  |  /  |SHFT/ENT|
//                   | GUI | LWR |CTRL/SPC|| SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &lt 4 ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &td0  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                  &kp LGUI &mo 1 &mt LCTRL SPACE   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |ALT/TAB|  1  |  2  |  3  |  4  |  5  ||  6  |  7  |  8  |  9  |  0  | BKSP |
// |UNLOCK|  F1 |  F2 |  F3 |  F4 |  F5 ||     |     |     |     |     |      |
// |SFT/TAB|     |     | F10 | F11 | F12 ||     |     |     |     |     |      |
//                    |     |     |     ||     |     |     |
                        bindings = <
   &kp TAB  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5   &kp N6  &kp N7  &kp N8  &kp N9  &kp N0 &kp BSPC
   &kp LC(LA(DEL)) &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &trans &trans &trans &trans &trans &trans
   &kp LSHFT  &trans  &trans  &kp F10  &kp F11  &kp F12  &trans &trans &trans &trans &trans &trans
                           &trans &trans &trans &trans &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |TLD/GRV|  !  |  @  |  #  |  $  |  %  ||  ^  |  &  |  *  |  (  |  )  | BKSP |
// |       |     |     |     |     |     ||  -  |  +  |  [  |  ]  |  \  |  NUM |
// |       |     |     |     |     |     ||  _  |  =  |  {  |  }  | "|" |      |
//                     |     |     |     ||     |     |     |
                        bindings = <
   &td1  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTERISK &kp LPAR &kp RPAR &kp BSPC
   &trans &trans   &trans &trans   &trans   &trans      &kp MINUS &kp PLUS &kp LBKT        &kp RBKT &kp BSLH &to 5
   &trans &trans   &trans &trans   &trans   &trans      &kp UNDER &kp EQUAL  &kp LBRC        &kp RBRC &kp PIPE &trans
                    	     &trans &trans &trans &trans &trans &trans
                        >;
                };
                
                adj_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |RESET|     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
//                   |     |     |     ||     |     |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &bootloader  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans  &trans  &trans  &trans
                        >;
                };
                
                nav_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
//                   |     |     |     ||     |     |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans  &trans  &trans  &trans
                        >;
                };
                
                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
//                   |     |     |     ||     |     |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans  &trans  &trans  &trans
                        >;
                };
        };
};
